version: "3.8"

name: microstack

networks:
  micro-net:

volumes:
  pgdata:
  config_repo:

services:
  # ====== INFRA ======
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks: [micro-net]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local
      PGADMIN_DEFAULT_PASSWORD: 123456
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks: [micro-net]

  # ====== CONFIG ======
  config-service:
    build: ./config-service
    container_name: config-service
    ports:
      - "8888:8888"
    volumes:
      - ./config-repo:/config-repo
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: file:/config-repo
      # SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL: main
    networks: [micro-net]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  # ====== DISCOVERY (Eureka) ======
  discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: discovery-service
      SERVER_PORT: 8761
      # Kéo cấu hình từ Config Server (có basic auth)
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
      SPRING_CLOUD_CONFIG_USERNAME: configuser
      SPRING_CLOUD_CONFIG_PASSWORD: configpass
      # Nếu backend là Git với nhánh main:
      SPRING_CLOUD_CONFIG_PROFILE: default
      SPRING_CLOUD_CONFIG_LABEL: main
      # Eureka server KHÔNG tự đăng ký / fetch
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    depends_on:
      config-service:
        condition: service_healthy
    networks: [ micro-net ]
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8761/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 30


  # ====== API GATEWAY ======
  api-gateway:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: gateway-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks: [micro-net]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  # ====== USER SERVICE ======
  user-service:
    build: ./user-service
    container_name: user-service
    environment:
      SPRING_APPLICATION_NAME: user-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
      # Ép port để tránh mặc định 8080 (nếu config-repo chưa có server.port)
      SERVER_PORT: 8082
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    networks: [micro-net]
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8082/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  # ====== AUTH SERVICE ======
  auth-service:
    build: ./auth-service
    container_name: auth-service
    environment:
      SPRING_APPLICATION_NAME: auth-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
      # Ép port cho thống nhất
      SERVER_PORT: 8081
      # Gợi ý: JWT_SECRET nên set trong config-repo (auth-service.yml)
      # JWT_SECRET: base64:PASTE_A_LONG_BASE64_SECRET_HERE
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    networks: [micro-net]
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8081/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30
